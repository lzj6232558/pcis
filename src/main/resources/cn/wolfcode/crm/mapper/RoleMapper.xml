<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.crm.mapper.RoleMapper" >

  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.Role" >
    <id column="id" property="id" />
    <result column="sn" property="sn" />
    <result column="name" property="name" />
    <!-- 查询权限: -->
    <collection property="permissions" column="id" ofType="cn.wolfcode.crm.domain.Permission"
                select="cn.wolfcode.crm.mapper.PermissionMapper.getPermissionByRoleId"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `role`
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.crm.domain.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into `role` (sn, name)
    values (#{sn}, #{name})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.crm.domain.Role" >
    update `role`
    set sn = #{sn},
      name = #{name}
    where id = #{id}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, sn, name
    from `role`
    where id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, sn, name
    from `role`
  </select>

  <!-- 维护角色和权限的关系: -->
  <insert id="insertRelation">
    INSERT INTO role_permission(role_id,permission_id) values
    <foreach collection="permissions" item="permission" separator=",">
      (#{roleId},#{permission.id})
    </foreach>
  </insert>

  <!-- 打破角色和权限的关系: -->
  <delete id="deleteRelation">
    delete from role_permission where role_id = #{roleId}
  </delete>

  <!-- 根据员工id查询角色: -->
  <select id="selectRolesByEmployeeId" resultMap="BaseResultMap">
    select r.id,r.name,r.sn
    from role r join employee_role er on r.id=er.role_id
    where er.employee_id = #{roleId}
  </select>
  <!-- 根据角色名称查询角色对象 -->
    <select id="selectByRoleName" resultType="cn.wolfcode.crm.domain.Role">
      select id, sn, name from role where name = #{roleName}
    </select>

    <!-- 根据员工id查询角色 -->
    <select id="selectByEmployeeId" resultType="java.lang.String">
      select r.name
      from role r left join employee_role er on r.id = er.role_id
      where er.employee_id = #{id}
    </select>

  <select id="selectAllRole" resultType="map">
    select id, name text
    from `role`
  </select>

  <!-- 根据员工id查询角色集 -->
  <select id="selectRoleByEmpId" resultType="java.lang.String">

  </select>

</mapper>
