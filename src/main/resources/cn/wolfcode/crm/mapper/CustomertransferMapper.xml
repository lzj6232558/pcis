<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.crm.mapper.CustomertransferMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.Customertransfer" >
    <id column="id" property="id" />
    <result column="transDate" property="transdate" />
    <result column="transReason" property="transreason" />

    <association property="customer" javaType="cn.wolfcode.crm.domain.Customer">
      <id column="m_id" property="id"/>
      <result property="name" column="m_name"/>
    </association>

    <association property="transuser" javaType="cn.wolfcode.crm.domain.Employee">
      <id property="id" column="t_id"/>
      <result property="username" column="t_name"/>
    </association>

    <association property="oldseller" javaType="cn.wolfcode.crm.domain.Employee">
      <id property="id" column="o_id"/>
      <result property="username" column="o_name"/>
    </association>

    <association property="newseller" javaType="cn.wolfcode.crm.domain.Employee">
      <id property="id" column="n_id"/>
      <result property="username" column="n_name"/>
    </association>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `customertransfer`
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.crm.domain.Customertransfer" useGeneratedKeys="true" keyProperty="id" >
    insert into `customertransfer` (customer_id, transUser_id, transDate, oldSeller_id, newSeller_id, 
      transReason)
    values (#{customer.id}, #{transuser.id}, #{transdate}, #{oldseller.id}, #{newseller.id}, 
      #{transreason})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.crm.domain.Customertransfer" >
    update `customertransfer`
    set
      transUser_id = #{transuser.id},
      transDate = #{transdate},
      oldSeller_id = #{oldseller.id},
      newSeller_id = #{newseller.id},
      transReason = #{transreason}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, customer_id, transUser_id, transDate, oldSeller_id, newSeller_id, transReason
    from `customertransfer`
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, customer_id, transUser_id, transDate, oldSeller_id, newSeller_id, transReason
    from `customertransfer`
  </select>


  <select id="queryForCount" resultType="int">
    SELECT COUNT(*) from customertransfer c LEFT JOIN customer m on c.customer_id = m.id LEFT JOIN employee t
on c.transUser_id = t.id LEFT JOIN employee o on c.oldSeller_id = o.id LEFT JOIN employee n on c.newSeller_id = n.id
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select c.id, c.customer_id, c.transUser_id, c.transDate, c.oldSeller_id, c.newSeller_id, c.transReason,m.id m_id,
 m.name m_name,t.id t_id,t.username t_name,o.id o_id,o.username o_name,n.id n_id,n.username n_name
from customertransfer c LEFT JOIN customer m on c.customer_id = m.id LEFT JOIN employee t
on c.transUser_id = t.id LEFT JOIN employee o on c.oldSeller_id = o.id LEFT JOIN employee n on c.newSeller_id = n.id
    limit #{beginIndex},#{rows}
  </select>


</mapper>