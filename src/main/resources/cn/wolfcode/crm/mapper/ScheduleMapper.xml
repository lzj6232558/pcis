<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.crm.mapper.ScheduleMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.Schedule" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createDate" property="createDate" jdbcType="DATE" />
    <result column="state" property="state" jdbcType="BIT" />
    <association property="employee" javaType="employee"
                 column="employee_id" select="cn.wolfcode.crm.mapper.EmployeeMapper.selectByPrimaryKey"/>
    <association property="department" javaType="department"
                 column="department_id" select="cn.wolfcode.crm.mapper.DepartmentMapper.selectByPrimaryKey"/>
    <association property="task" javaType="task"
                 column="task_id" select="cn.wolfcode.crm.mapper.TaskMapper.selectByPrimaryKey"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    DELETE FROM `schedule`
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.crm.domain.Schedule" useGeneratedKeys="true" keyProperty="id" >
    INSERT INTO `schedule` (createDate, employee_id, department_id,
      task_id, state)
    VALUES (#{createDate,jdbcType=DATE}, #{employee.id,jdbcType=BIGINT}, #{department.id,jdbcType=BIGINT},
      #{task.id,jdbcType=BIGINT}, #{state,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.crm.domain.Schedule" >
    UPDATE `schedule`
    SET createDate = #{createDate,jdbcType=DATE},
      employee_id = #{employee.id,jdbcType=BIGINT},
      department_id = #{department.id,jdbcType=BIGINT},
      task_id = #{task.id,jdbcType=BIGINT},
      state = #{state,jdbcType=BIT}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT id, createDate, employee_id, department_id, task_id, state
    FROM `schedule`
    WHERE id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    SELECT id, createDate, employee_id, department_id, task_id, state
    FROM `schedule`
  </select>




  <!--高级查询条件-->
  <sql id="condition_sql">
    <where>
      <if test="username!=null and username!=''">
        and e.username like concat('%',#{username},'%')
      </if>
      <if test="dept_id!=null and dept_id!=''">
        and department_id =#{dept_id}
      </if>
      <if test="beginDate!=null and beginDate!=''">
        and Date(createDate) &gt;= #{beginDate}
      </if>
      <if test="endDate!=null and endDate !=''">
        and Date(createDate) &lt;=  #{endDate}
      </if>
    </where>
  </sql>

  <!--分页查询-->
  <select id="queryForCount" resultType="int">
    SELECT count(s.id)
    FROM  `schedule` s JOIN  employee e ON s.employee_id=e.id
    <include refid="condition_sql"/>
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    SELECT s.id, s.createDate, s.employee_id, s.department_id, s.task_id, s.state
    FROM  `schedule` s JOIN  employee e ON s.employee_id=e.id
    <include refid="condition_sql"/>
    LIMIT #{beginIndex},#{rows}
  </select>

  <!--根据taskid来查schedule-->
  <select id="selectScheduleByTaskId" resultMap="BaseResultMap">
    SELECT id, createDate, employee_id, department_id, task_id, state
    FROM `schedule`
    WHERE  task_id=#{task_id}
  </select>

  <!--标记为完成-->
  <update id="changeState">
     UPDATE `schedule`
    SET state = 1
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <!--检查任务状态-->
  <select id="checkState" resultType="long">
    SELECT s.id FROM `schedule` s JOIN task t ON s.task_id = t.id
    WHERE DATE(t.plan) &lt; #{date}
  </select>
  <!--设置未完成任务状态-->
  <update id="change2UnFinsh">
     UPDATE `schedule`
    SET state = 0
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
</mapper>